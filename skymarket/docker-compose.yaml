version: '3'

services:
  db:
    image: postgres:12.4-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - '5432:5432'
    networks:
      myNetwork:
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}' ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ../skymarket
    container_name: backend
    restart: always
    command: >
      sh -c "python manage.py migrate && python manage.py loadall && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8001:8000'
    networks:
      myNetwork:
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  frontend:
networks:
  myNetwork:

